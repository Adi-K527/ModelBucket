name: "Deploy model Tier 2"


on:
    workflow_dispatch:
      inputs:
        filename:
          description: "name of model file"
          required: true
        secrettoken:
          description: "mb auth token"
          required: true
        project_id:
          description: "id of project"
          required: true
        model_id: 
          description: "id of model"
          required: true

env:
  AWS_REGION:            ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY:        ${{ secrets.ECR_REPOSITORY }}
  ACCOUNT_ID:            ${{ secrets.ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  MODEL_REQS_BUCKET:     ${{ secrets.MODEL_REQS_BUCKET }}
  MODEL_FILES_BUCKET:    ${{ secrets.MODEL_FILES_BUCKET }}
  BACKEND_URL:           ${{ secrets.VITE_BACKEND_URI }}
  HETZNER_TOKEN:         ${{ secrets.HETZNER_TOKEN }}
  HETZNER_SSH_KEY:       ${{ secrets.HETZNER_SSH_KEY }}


jobs:
    deploy:
        name: Deploy
        runs-on: ubuntu-latest

        steps:
            - name: Create secret environment variables from inputs 
              run: |
                FILENAME=$(jq -r '.inputs.filename' $GITHUB_EVENT_PATH)
                echo ::add-mask::$FILENAME
                echo FILENAME="$FILENAME" >> $GITHUB_ENV
        
                MB_SECRET_TOKEN=$(jq -r '.inputs.secrettoken' $GITHUB_EVENT_PATH)
                echo ::add-mask::$MB_SECRET_TOKEN
                echo MB_SECRET_TOKEN="$MB_SECRET_TOKEN" >> $GITHUB_ENV
        
                PROJECT_ID=$(jq -r '.inputs.project_id' $GITHUB_EVENT_PATH)
                echo ::add-mask::$PROJECT_ID
                echo PROJECT_ID="$PROJECT_ID" >> $GITHUB_ENV
        
                MODEL_ID=$(jq -r '.inputs.model_id' $GITHUB_EVENT_PATH)
                echo ::add-mask::$MODEL_ID
                echo MODEL_ID="$MODEL_ID" >> $GITHUB_ENV
    
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Ansible
              uses: devops-infra/action-ansible@v2
              with:
                ansible_version: 2.13.0

            - name: Setup Hetzner Server
              uses: TimDaub/hetzner-cloud-deploy-server-action@v2
              with:
                server-name: "TestServer"
                server-image: "ubuntu-20.04"
                server-type: "cx22"
                ssh-key-name: "hetzner_key"
                hcloud-token: ${{ secrets.HETZNER_TOKEN }}
                delete-server: false
            
            - name: Add Server IP to hosts file
              env:
                HCLOUD_TOKEN: ${{ secrets.HETZNER_TOKEN }}
              working-directory: ./playbooks/inventory
              run: |
                server_id=$(hcloud server list --selector name=${{ env.FILENAME }} -o json | jq -r '.[0].id')
                SERVER_IP=$(hcloud server describe $server_id -o json | jq -r '.public_net.ipv4.ip')
                echo ::add-mask::$SERVER_IP
                echo SERVER_IP="$SERVER_IP" >> $GITHUB_ENV
                echo $SERVER_IP > hosts
            
            - name: Configure Server with Ansible
              run: | 
                echo ${{ env.HETZNER_SSH_KEY }} > ansible/.ssh/id_rsa
                echo "${{ env.SERVER_IP }} ansible_user=root ansible_ssh_private_key_file=~/.ssh/id_rsa" >> temp_inventory
                ansible-playbook -i temp_inventory ansible/setup.yml
                rm temp_inventory
              
                
