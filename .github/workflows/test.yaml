name: "Deploy model Tier 2"


on:
    push:
      branches:
        - main

env:
  AWS_REGION:            ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY:        ${{ secrets.ECR_REPOSITORY }}
  ACCOUNT_ID:            ${{ secrets.ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  S3_BUCKET:             ${{ secrets.MB_BUCKET }}
  MODEL_FILES_BUCKET:    ${{ secrets.MODEL_FILES_BUCKET }}
  BACKEND_URL:           ${{ secrets.VITE_BACKEND_URI }}
  HETZNER_TOKEN:         ${{ secrets.HETZNER_TOKEN }}
  HETZNER_SSH_KEY:       ${{ secrets.HETZNER_SSH_KEY }}


jobs:
    deploy:
        name: Deploy
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install envsubst
              run: sudo apt-get install -y gettext-base

            - uses: hetznercloud/setup-hcloud@v1
            - run: |
                if hcloud server describe test > /dev/null 2>&1; then
                  echo SERVER="true" >> $GITHUB_ENV
                else
                  echo SERVER="false" >> $GITHUB_ENV
                fi
              env:
                HCLOUD_TOKEN: ${{ env.HETZNER_TOKEN }}


            - uses: hetznercloud/setup-hcloud@v1
            - run: |
                if [ "$SERVER" = "false" ]; then
                  hcloud server create --name test --image "ubuntu-20.04" --type "cx22" --ssh-key "hetzner_key"

                  SERVER_IPV4=$(hcloud server describe test --output json | jq -r '.public_net.ipv4.ip')
                  echo ::add-mask::$SERVER_IPV4
                  echo SERVER_IPV4="$SERVER_IPV4" >> $GITHUB_ENV
                  echo "Instance has been created."
                  sleep 20

                else
                  SERVER_IPV4=$(hcloud server describe test --output json | jq -r '.public_net.ipv4.ip')
                  echo ::add-mask::$SERVER_IPV4
                  echo SERVER_IPV4="$SERVER_IPV4" >> $GITHUB_ENV
                fi
              env:
                HCLOUD_TOKEN: ${{ env.HETZNER_TOKEN }}
                SERVER: ${{ env.SERVER }}

            - uses: webfactory/ssh-agent@v0.4.1
              with:
                ssh-private-key: ${{ env.HETZNER_SSH_KEY }}
            - run: |
                ssh -o -t StrictHostKeyChecking=no root@${{ env.SERVER_IPV4 }} << "EOF" > temp.txt
                    echo "some thing"

                cat temp.txt

                                