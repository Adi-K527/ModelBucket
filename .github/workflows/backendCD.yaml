name: "Backend Continuous Deployment"

on:
    workflow_run:
      workflows: [Set up cloud resources]
      types:
        - completed

env:
  GOOGLE_CREDENTIALS:    ${{ secrets.GOOGLE_CREDENTIALS }}
  AWS_REGION:            ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY:        ${{ secrets.ECR_REPOSITORY }}
  ACCOUNT_ID:            ${{ secrets.ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  MODEL_REQS_BUCKET:     ${{ secrets.MODEL_REQS_BUCKET }}
  MODEL_FILES_BUCKET:    ${{ secrets.MODEL_FILES_BUCKET }}
  PROJECT_ID:            ${{ secrets.GCP_PROJECT_ID }}
  SERVICE:               ${{ secrets.GCP_CLOUDRUN_SERVICE }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ env.GOOGLE_CREDENTIALS }}'

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ env.GOOGLE_CREDENTIALS }}
          export_default_credentials: true

      - name: Configure docker for GCP
        run: gcloud auth configure-docker

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:latest
          build-args: |
            HTTP_PORT=8080

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@main
        with:
          image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:latest
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          platform: managed
          allow-unauthenticated: true
          env_vars: |
              FOO=bar
              ZIP=zap
        
    
        